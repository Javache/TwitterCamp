<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
		   creationComplete="handle_creationComplete()"
		   verticalScrollPolicy="off"
		   horizontalScrollPolicy="off">
	<mx:Script>
		<![CDATA[
			import mx.containers.Grid;
			import mx.containers.GridItem;
			import mx.containers.GridRow;
			import mx.events.ResizeEvent;
			
			import twittercamp.services.twitter.Tweet;
			
			public var rows:int = 3;
			public var columns:int = 4;
			public var padding:int = 30;
			
			private var firstBubble:StatusBubble;
			private var bubbleWidth:int = -1;
			private var bubbleHeight:int = -1;
			private var bubbleItems:Array;
			private var nextBubble:int = 0;
			
			public function getSize():int
			{
				return rows * columns - 4;
			}
			
			public function showTweet(tweet:Tweet):void
			{
				var last:Tweet = firstBubble.twitterStatus;
				firstBubble.twitterStatus = tweet;
				
				trace("Pushing tweet" + tweet.content);
				
				if(last != null)
				{
					bubbleItems[nextBubble].twitterStatus = last;
					nextBubble = (nextBubble + 1) % getSize();
				}
			}
			
			private function handle_creationComplete():void
			{
				bubbleItems = new Array();
				for(var i:int = 0; i < rows; i++)
				{
					var row:GridRow = new GridRow();
										
					for(var j:int = 0; j < columns; j++)
					{
						// create huge cell
						if(i == 0 && j == 1)
						{
							firstBubble = new StatusBubble();
							
							var cell:GridItem = new GridItem();
							cell.addChild(firstBubble);
							cell.rowSpan = 2;
							cell.colSpan = 2;
							
							row.addChild(cell);
						}
						else
						{
							if((i == 0 || i == 1) && (j == 1 || j == 2)) continue;
							
							var bubble:StatusBubble = new StatusBubble();
							bubbleItems.push(bubble);
							
							GridItem(row.addChild(new GridItem())).addChild(bubble);
						}
					}
					grid.addChild(row);
				}			
				
				for each(var prop:String in [
					"paddingLeft", "paddingRight", "paddingTop", 
					"paddingBottom", "verticalGap", "horizontalGap"])
				{
					grid.setStyle(prop, padding);
				}
				
				updateGridChildren(null);
				addEventListener(ResizeEvent.RESIZE, updateGridChildren);
			}
			
			private function updateGridChildren(event:ResizeEvent):void
			{
				// calculate bubble width and height
				bubbleWidth = Math.floor((width - (columns + 1)*padding) / columns); 
				bubbleHeight = Math.floor((height - (rows + 1)*padding) / rows);
				trace("Bubble size is ", bubbleWidth, "x", bubbleHeight);
				
				firstBubble.width = 2*bubbleWidth;
				firstBubble.height = 2*bubbleHeight;
				GridItem(firstBubble.parent).setStyle("paddingLeft", padding/2)
				GridItem(firstBubble.parent).setStyle("paddingRight", padding/2);
				
				for each(var bubble:StatusBubble in bubbleItems)
				{
					bubble.width = bubbleWidth;
					bubble.height = bubbleHeight;
				}
			}
		]]>
	</mx:Script>
	<mx:Grid id="grid"></mx:Grid>
</mx:Canvas>
